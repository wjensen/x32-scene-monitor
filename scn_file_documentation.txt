Behringer X32/Midas M32 .scn Scene File Format

Plain Text Format and Overall Structure

The scene (.scn) files from Behringer X32 and Midas M32 mixers are stored in plain ASCII text, not a proprietary binary format ￼ ￼. In fact, a scene file is essentially a list of all mixer parameters (typically over 2,000 lines of text for a full console snapshot ￼). Each line represents a setting or command on the console, using a human-readable path and values. The format closely mirrors the mixer’s OSC (Open Sound Control) parameter addresses: for example, a line might start with an address like /ch/01/... for Channel 1 settings, /mixbus/05/... for Bus 5, or /fx/1/... for the first effects slot, followed by the parameter values. In other words, the scene file is basically a table of console settings (fader levels, EQ bands, routing assignments, etc.) written as text commands ￼ ￼. This makes the files surprisingly readable and easy to parse once you know the structure.

Contents and Parameter Sections

Because an .scn scene is a complete snapshot of the mixer, it includes every major configuration section and channel parameter. The text lines are organized by functional groups, each group typically identified by a leading path. Key sections and examples of what they contain include:
	•	Global Console Configuration: Overall settings under paths like /config/…. For example, the scene begins with things like channel link status (/config/chlink), aux/fx channel linking, monitor and talkback settings, and input routing setup ￼ ￼. These lines define how channels are paired, talkback source and levels, and which physical inputs (local, AES50 stage box, card, etc.) feed each channel bank ￼. There is also a user-assignable controls section (for the assignable buttons/encoders) saved in the scene ￼.
	•	Input Channel Strips (1–32): For each mono input channel, there is a block of lines under /ch/01/… through /ch/32/…. Each channel’s block covers its name and icon/color, source assignment, and all processing parameters from preamp to EQ and dynamics ￼ ￼. For example, a channel’s /config line contains the name, source, and color/icon; the /preamp line stores the analog gain, polarity (invert), and low-cut filter status/frequency ￼. The channel section then includes lines for gate settings (/gate … threshold, attack, etc.), compressor/limiter settings (/dyn … mode, threshold, ratio, etc.), insert on/off and position, and the 4-band parametric EQ (/eq lines for each band with type, frequency, gain, and Q) ￼ ￼. It also lists the channel’s sends to mix buses (each send level, on/off, and pre/post) and assignment to main LR or mono bus ￼. Additionally, group assignments (which DCA groups and mute groups the channel belongs to) are encoded in a channel’s “Group” line ￼. In short, everything adjustable per input channel (from preamp gain to pan and mute group membership) appears in its .scn block.
	•	Aux Inputs and FX Returns: The X32/M32 have 8 Aux inputs and 8 FX return channels, which are also saved in the scene. These follow a similar format (/auxin/01/... or /fxrtn/01/... paths, etc.), though they omit parameters that don’t apply. For example, Aux inputs and FX returns don’t have a gate section, and they have only 4-band EQ (like regular channels) but limited or no preamp/gain settings (aux inputs have digital trim instead of a mic preamp) ￼. The scene will include their names, EQ, sends, etc., in the same style as regular channels.
	•	Mix Buses (1–16): Each of the 16 mix buses (aux/monitor sends) has a section (e.g. /bus/01/... through /bus/16/...). A bus’s scene data includes its name/color, configuration (mono/stereo link status appears in the global config), its dynamics processor (compressor) settings, its 6-band EQ settings, and sends to the matrix or main if applicable ￼ ￼. (Mix buses don’t have gates, and their EQ is 6-band because buses and mains allow two extra bands or filters like low-cut/high-cut ￼.) The bus’s master fader level and mute are also stored.
	•	Matrix Outputs (1–6) and Main LR/Mono: The matrix mix outputs and main outputs have similar entries. Each Matrix (1–6) and the Main L/R and Mono (M/C) buses include lines for their name, compressor, 6-band EQ, etc., plus their output fader level and mute. The main L/R bus’s entry also captures the stereo balance/pan (if used for L/R) ￼. These sections ensure that the entire final output processing (master EQ, dynamics, delays, etc.) is saved. For example, delay lines for outputs (/outputs/.../delay) store any output delays on outputs or matrices ￼.
	•	DCA Groups and Mute Groups: The scene file also saves the state of the 8 DCA faders and 6 mute groups. DCA groups on X32/M32 don’t process audio, but their fader levels and names are stored. The membership of channels in each DCA or mute group is reflected in each channel’s config (as mentioned above). Scenes created on newer firmware also include DCA and mute group assignments for matrices and mains if applicable (firmware 4.x added that) ￼ ￼. Essentially, the .scn captures which channels are assigned to which DCAs and which mute groups, and the current DCA fader values.
	•	Effects Rack Settings: All parameters for the console’s 8 internal FX slots are included as well. For each FX unit (FX1–FX8), the scene stores the effect type loaded (reverb, delay, etc.) and all of that effect’s parameter values. These appear under paths like /fx/1/par ... with a series of values, or similar. (Each effect can have dozens of parameters, which are all saved in one block.) The scene thus fully recalls the configuration of each rack effect and any inserted effects connections. Note: The exact line format for FX parameters is a bit dense (often a long list of numbers), but it is still plain text and documented by users.
	•	Output Routing and Patching: The file records how the mixer’s outputs are assigned. This includes the patching of signals to the 16 XLR outputs (/outputs/main/01… lines for Out 1–16) ￼, the 6 Aux outputs (/outputs/aux/01…) ￼, the 16 Ultranet P16 outputs (/outputs/p16/01…) ￼, and the AES/EBU stereo output (/outputs/aes/01… etc.) ￼. Each output line typically contains a source signal selection (an input, bus, matrix, etc.), the tap point (pre/post fader), and a polarity or mute flag. In other words, the entire routing table for all physical outputs is saved in the scene. (The input routing – i.e. which inputs feed the channels – is part of the global config at the top, as mentioned earlier.)
	•	Head Amplifier Gains: Finally, mic preamp gain settings and phantom power for all analog inputs are stored (if not safed). At the end of the scene file you’ll find the headamp section, which lists the gain values for each physical preamp (and whether phantom power is on/off) ￼. This applies to local XLR inputs and any remote stage box inputs (AES50) that the scene is set to recall. Because preamp gains can be globally safe on the console, loading a scene may optionally skip these, but they are present in the file. For example, lines under /headamp/ or in the /preamp sections capture these analog gain settings in dB.

As the above shows, an .scn file encapsulates every aspect of the mixer’s state: from high-level configuration and routing down to each channel’s EQ band and fader. The data is structured in a logical order (the console’s load sequence is config first, then inputs, then outputs, etc. ￼). Notably, the X32 and M32 use the same scene file format, so a scene file from a Behringer X32 can be loaded on a Midas M32 and vice-versa without conversion (the hardware and firmware are compatible).

Manual Editing and Usage

Because scene files are plain-text, users can open and edit .scn files in any text editor (e.g. Notepad or TextEdit). In some cases you might need to change the file extension to .txt for the editor to recognize it ￼, but the content is readable. This means advanced users can tweak settings or fix issues by editing the text directly. For example, one can search/replace channel names, copy a mix preset from one channel to another by duplicating its lines, or delete certain lines to create a partial scene (a “snippet”). A community tutorial notes that the .scn file can indeed be viewed and modified line-by-line – it’s essentially a big list of console commands ￼.

However, caution is advised when manual-editing scenes. The mixer expects the file in a very specific format. Every line must conform to a valid parameter syntax and order, or the console may flag an error or load the scene partially. It’s wise to keep backups before editing, and make only small, tested changes. As FileInfo warns, “if you incorrectly edit the file, you may inadvertently corrupt the scene.” ￼ In practice, simple edits (like changing a numeric value or label) are safe, but adding/removing lines or altering the structure could cause problems. Always ensure the syntax (spacing, quotes, etc.) matches the original format.

On the positive side, the plain-text format also makes it easy to compare scenes (using diff tools) or to version-control your mixer settings. In fact, some engineers export scenes regularly and use text diffs to see what changed in the mix from week to week. The text format is one reason these mixers are popular in the live sound community – it gives power users a way to audit and adjust the data outside of the console. Even the official editing software (X32-Edit or M32-Edit) is essentially reading/writing the same .scn text under the hood, just with a graphical interface.

Tools and Community Resources

A number of tools and community-developed resources exist to work with X32/M32 scene files:
	•	Official Editor Apps: Behringer provides X32-Edit (and Midas offers M32-Edit) for PC/Mac/Linux, which allow offline editing of scenes on a computer. These programs load and save .scn files and present all the parameters in a GUI. They’re the standard way to edit scenes without using the console itself. (You can, for example, load a scene in X32-Edit, tweak settings, and save it back to .scn for later use on the mixer.)
	•	Scene Parsing and Scripting Tools: Community developers have created utilities to read or manipulate .scn files directly. Notably, Patrick-Gilles Maillot has open-sourced a suite of X32 tools ￼. For instance, his X32SetScene program can take a scene file and send all those settings to a console over the network, essentially “recalling” the scene remotely ￼. Likewise, X32GetScene can pull the current console state into a text scene file. These C-based tools (available on GitHub) confirm that the scene file is just a batch of OSC commands that can be transmitted to the mixer to reproduce the settings ￼.
	•	X32 Scene Parser (Snippet Generator): Another powerful resource is the X32 Scene Parser by Paul Vannatto ￼ ￼. This is a cross-platform tool (Windows, Mac, Linux) that can load a scene file, parse it, and let you extract or modify specific sections. It was developed out of forum discussions to create “snippets” – partial scenes – that aren’t directly supported by the console GUI ￼. With this tool, you can compare two scene files (to see differences), merge parts of scenes, generate new scene or snippet files containing only desired parameters, and even convert between X32 and X-Air formats ￼ ￼. The Scene Parser provides a convenient way to edit scenes with more granularity than the mixer itself allows. It essentially serves as a text editor specialized for .scn syntax, with features for batch edits (e.g. adjusting the same parameter on multiple channels at once) ￼.
	•	Documentation of the Format: Because Behringer doesn’t publish an official spec for the .scn file, the user community has documented it. A prime example is a GitHub repository by Carsten Koch (user “cabcookie”) which explains the structure of the X32 scene file in detail ￼. This documentation breaks down each section (config, preamps, EQ, etc.) and describes the meaning of each value in the lines. For instance, it clarifies the field order for each command (e.g. what each number in a /dyn or /eq line represents) and notes differences for various channel types ￼ ￼. Community forums (like the Music Tribe forum and Reddit’s r/livesound) have numerous threads discussing scene file tips and tricks. Users have shared that .scn files from X32 and M32 are interchangeable and even have tools to convert X32/M32 scenes to work on other consoles like the Behringer Wing (via third-party converters) ￼. There are also utilities like X32 Show File Converter and online services to generate channel patch lists from scene/show files (for example, an app that produces a stage plot or patch sheet by reading the .scn). These resources make it easier to manage and repurpose scene data outside the mixer.

In summary, the Behringer X32/Midas M32 scene file is a plain-text, human-readable file containing every mixer setting grouped by category. It’s organized in sections (preamp, EQ, dynamics, routing, effects, etc.), and yes, it can be opened or even hand-edited with care ￼. This openness has enabled a vibrant ecosystem of community documentation and tools – from detailed file breakdowns to programs that parse and generate scenes. Whether you use the official editor or third-party utilities, understanding the .scn format can unlock advanced workflows like bulk editing of console settings, version control of your mixes, and easy sharing of configurations between X32/M32 users ￼ ￼.

Sources: The information above was synthesized from user-contributed documentation and tools for the X32/M32. Key references include the Drew Brashler blog on X32 scenes ￼ ￼, the FileInfo database entry for “Behringer X32 Scene” confirming the ASCII format ￼, Carsten Koch’s Medium article and GitHub repo describing the scene content ￼ ￼, and the readme/notes of community tools like the Scene Parser ￼ ￼. These sources provide a deep dive into the .scn file structure and demonstrate the various ways it can be utilized and modified.